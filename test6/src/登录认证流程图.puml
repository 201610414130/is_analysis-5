@startuml
skinparam titleBorderRoundCorner 15
skinparam titleBorderThickness 2
skinparam titleBorderColor #Black
skinparam titleFontSize 24
Title 登录认证流程图

database "前端存储Cookie\nSessionStorage" as CS
boundary 边界类loginWindow as LW
control "控制类Login\nAPI服务" as LA
database 数据库存储 as SH

== Login登录页面 ==
activate CS
SH->SH:预存了每个用户的信息：\n用户名+hash加密的密码
activate SH
deactivate SH
LA->LA:服务程序启动，生成公钥和私钥
activate LA
deactivate LA
LW->LA:页面事件：mounted()，\nAPI请求:<b>get_public_key_str<b>，获取公钥
activate LW
activate LA
LA->LW:返回公钥：public_key_str
deactivate LA
LW->LW:用户输入用户名和密码，点击login按钮
LW->LW:使用JSEncrypt通过公钥加密输入的密码
LW->LA:API请求:<b>login</b>,参数是用户名和公钥加密密码
activate LA
LA->LA:使用RSA根据私钥解密收到的加密密码，得到用户密码
LA->SH:从数据库取出用户名以及hash密码
activate SH
SH->LA:返回该用户的hash密码
deactivate SH
LA->LA:调用check_password_hash(hash密码,用户密码)
LA->CS:调用login_user(),\n将用户的ID值写到Cookies['session']中\n并设置失效时间
LA->LW:返回成功信息
deactivate LA
== 用户登录后正常使用，\n每次请求浏览器都会自动将\nCookies['session']传给API服务解析，\n让API服务知道是哪个用户的请求==

skinparam sequence {
	ArrowColor DeepSkyBlue
	ActorBorderColor DeepSkyBlue
	LifeLineBorderColor blue
	LifeLineBackgroundColor #A9DCDF
	ParticipantBorderColor DeepSkyBlue
	ParticipantBackgroundColor DodgerBlue
	ParticipantFontName Impact
	ParticipantFontSize 17
	ParticipantFontColor #A9DCDF
	ActorBackgroundColor aqua
	ActorFontSize 17
	ActorFontName Aapex
}
@enduml
